{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","handleClick","good","includes","setState","filter","el","console","log","clearGoods","checkGoods","goods","length","join","slice","this","className","type","classNames","nonVisible","onClick","map","active__selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,YAAc,SAACC,GACT,EAAKH,MAAMC,aAAaG,SAASD,GACnC,EAAKE,UAAS,SAACL,GAAD,MAAY,CACxBC,aAAcD,EAAMC,aACjBK,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,UAGzB,EAAKE,UAAS,SAACL,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,QAGxCK,QAAQC,IAAI,EAAKT,MAAMC,gB,EAI3BS,WAAa,WACX,EAAKL,SAAS,CACZJ,aAAc,M,EAIlBU,WAAa,SAACC,GACZ,OAAQA,EAAMC,QACZ,KAAK,EACH,MAAO,mBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAME,KAAK,SAArB,iBACF,QACE,MAAM,GAAN,OAAUF,EAAMG,MAAM,GAAI,GAAGD,KAAK,MAAlC,gBAA+CF,EAAMA,EAAMC,OAAS,GAApE,mB,4CAIN,WAAU,IAAD,OACCZ,EAAiBe,KAAKhB,MAAtBC,aAER,OACE,sBAAKgB,UAAU,MAAf,UACE,qBAAIA,UAAU,gBAAd,2BAEE,mBAAGA,UAAU,gBAAb,SAA8BD,KAAKL,WAAWV,KAC9C,wBACEiB,KAAK,SACLD,UAAWE,IACT,4BACA,CAAEC,WAAoC,IAAxBnB,EAAaY,SAE7BQ,QAASL,KAAKN,WANhB,sBAWF,6BACGZ,EAAgBwB,KAAI,SAACnB,GAAD,OACnB,qBAAIc,UAAU,oBAAd,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,CAAE,sBAAuBlB,EAAaG,SAASD,KAEjDkB,QAAS,WACP,EAAKnB,YAAYC,IAPrB,SAUGF,EAAaG,SAASD,GAAQ,SAAW,WAE5C,sBAAMc,UAAWE,IACf,SACA,CAAEI,iBAAkBtB,EAAaG,SAASD,KAF5C,SAKGA,MAlBkCA,e,GA5DjCqB,IAAMC,WAwFT1B,ICzGf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4fb29610.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  handleClick = (good: string) => {\n    if (this.state.selectedGood.includes(good)) {\n      this.setState((state) => ({\n        selectedGood: state.selectedGood\n          .filter(el => el !== good),\n      }));\n    } else {\n      this.setState((state) => ({\n        selectedGood: [...state.selectedGood, good],\n      }));\n      // eslint-disable-next-line no-console\n      console.log(this.state.selectedGood);\n    }\n  };\n\n  clearGoods = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  checkGoods = (goods: string[]) => {\n    switch (goods.length) {\n      case 0:\n        return 'No selected good';\n      case 1:\n        return `${goods[0]} is selected`;\n      case 2:\n        return `${goods.join(' and ')} are selected`;\n      default:\n        return `${goods.slice(0, -1).join(', ')} and ${goods[goods.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"subtitle is-1\">\n          Selected good:\n          <p className=\"subtitle is-2\">{this.checkGoods(selectedGood)}</p>\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-danger is-light',\n              { nonVisible: selectedGood.length === 0 },\n            )}\n            onClick={this.clearGoods}\n          >\n            Clear\n          </button>\n        </h1>\n        <ul>\n          {goodsFromServer.map((good) => (\n            <li className=\"box subtitle is-4\" key={good}>\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button',\n                  { 'is-warning is-light': selectedGood.includes(good) },\n                )}\n                onClick={() => {\n                  this.handleClick(good);\n                }}\n              >\n                {selectedGood.includes(good) ? 'Remove' : 'Select'}\n              </button>\n              <span className={classNames(\n                'active',\n                { active__selected: selectedGood.includes(good) },\n              )}\n              >\n                {good}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}